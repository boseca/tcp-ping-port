# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: npm release

on:
  release:
    types: [published, edited]

jobs:
  check:
    name: Check version and tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get package version
        shell: bash
        id: package_version
        run: |
          ver=$(jq .version package.json | sed -e "s/^\"//" -e "s/\"//")
          echo "::set-output name=version::$ver"
      - name: Compare package version and release tag
        if: steps.package_version.outputs.version != github.event.release.tag_name
        env:
          TAG: "${{ github.event.release.tag_name }}"
          PKG_VER: ${{ steps.package_version.outputs.version }}
        run: |
          echo "Mismatch NPM version $PKG_VER and git tag $TAG"
          exit 1

  build:
    name: Lint and test
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm ci
      - run: npm run lint --if-present
      - run: npm test

  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
        
      - name: Get latest NPM version
        id: latest_package_ver
        shell: bash
        run: |
          var=$(npm info tcp-ping-port dist-tags.latest)
          echo "::set-output name=version::$var"
                    
      - name: Publish package to NPM    (if the version is not published yet)
        if: steps.latest_package_ver.outputs.version != github.event.release.tag_name
        run: |
          echo "Publishing new NPM Package version $TAG (previous version $LATEST_PKG_VER)"
          npm ci
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
          TAG: "${{ github.event.release.tag_name }}"
          LATEST_PKG_VER: ${{ steps.latest_package_ver.outputs.version }}

      - name: Show info (package was already published)
        if: steps.latest_package_ver.outputs.version == github.event.release.tag_name
        run: |
          echo "NPM Package version ${{ github.event.release.tag_name }} is already published!"

  publish-gpr:
    name: SKIP - Publish to GitHub Package Registry
             # - we want to keep all packages in a single package repo `npmjs.org`
             # - plus, there is some bugs with Github publishing. The examples are not working.
             # - plus, we have to change the package name
             # - plus, currently there is no easy way to check if package was already deployed on `npm.pkg.github.com`
    if: false
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
